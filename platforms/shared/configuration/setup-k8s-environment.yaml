##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

---
#######################################
# Playbook to setup the Kubernetes environment for running Hyperledger Bevel on the cluster
#  - Installs Flux for GitOps
#  - Installs Ambassador (if chosen)
#  - Install HAproxy-ingress (if chosen)
#######################################
- hosts: ansible_provisioners
  gather_facts: no
  no_log: "{{ no_ansible_log | default(false) }}"
  tasks:
  - name: Print start k8s environment set setup MVK
    debug:
      msg:
        - "Start of setting up k8s environment on the cluster"
      
  # Setup flux
  - include_role:
      name:  setup/flux
    vars:
      kubeconfig_path: "{{ item.k8s.config_file }}"
      kubecontext: "{{ item.k8s.context }}"
      git_username: "{{ item.gitops.username }}"
      git_repo: "{{ item.gitops.git_repo }}"
      git_password: "{{ item.gitops.password }}"
      git_branch: "{{ item.gitops.branch }}"
      git_path: "{{ item.gitops.release_dir }}"
      git_host: "{{ item.gitops.git_repo.split('/')[0] | lower }}" # extract the hostname from the git_repo
      git_protocol: "{{ item.gitops.git_protocol | default('https') }}"
      git_url: "{{ item.gitops.git_url }}"
      git_key: "{{ item.gitops.private_key | default() }}"
      flux_version: "2.3.0"
    with_items: "{{ network.organizations }}"
    when: network.env.type != 'operator'

  - name: Print end setup flex on k8s cluster MVK
    debug:
      msg:
        - "End of setting up flex on k8s cluster"
        
  # Setup ambassador edge stack (enabled for besu and quorum)
  - include_role:
      name: setup/edge-stack
    vars:
      kubeconfig_path: "{{ item.k8s.config_file }}"
      kubecontext: "{{ item.k8s.context }}"
      aws: "{{ item.aws }}"
      organization: "{{ item }}"
    with_items: "{{ network.organizations }}"
    when: 
    - network.env.proxy == 'ambassador' 

  # Installs cert-manager
  - include_role:
      name: setup/certmanager
    vars:
      kubeconfig_path: "{{ item.k8s.config_file }}"
      kubecontext: "{{ item.k8s.context }}"
      aws: "{{ item.aws }}"
      organization: "{{ item }}"
    with_items: "{{ network.organizations }}"
    when: 
      - network.env.proxy == 'ambassador'
      - network.type == 'besu'

  # Setup haproxy-ingress for Fabric
  - include_role:
      name: setup/haproxy-ingress
    vars:
      kubeconfig_path: "{{ item.k8s.config_file }}"
      kubecontext: "{{ item.k8s.context }}"
      aws: "{{ item.aws }}"
    with_items: "{{ network.organizations }}"
    when: network.env.proxy == 'haproxy'

  # Setup istio for Fabric Operator
  - include_role:
      name: setup/istio
    vars:
      kubeconfig_path: "{{ item.k8s.config_file }}"
      kubecontext: "{{ item.k8s.context }}"
      aws: "{{ item.aws }}"
    with_items: "{{ network.organizations }}"
    when: network.env.proxy == 'istio'

  # Setup Fabric Operator
  - name: Setup bevel-operator-fabric for each organization
    include_role:
      name: "setup/operator"
    vars:
      operator_version: "1.9.0"
      kubeconfig_path: "{{ item.k8s.config_file }}"
      kubecontext: "{{ item.k8s.context }}"
    with_items: "{{ network.organizations }}"
    when: 
    - network.type == 'fabric'
    - network.env.type == 'operator'

  # Deploy prometheus server
  - name: Deploy prometheus server
    include_role:
      name: setup/prometheus
    vars:
      prometheus_port: "{{ network.prometheus.port }}"
    when: 
    - network.prometheus is defined and network.prometheus.enabled == true
    - network.type == "besu"

  - name: Print finish k8s environment set setup MVK
    debug:
      msg:
        - "Finished setting up k8s environment on the cluster"
        
#MVK - this seems wrong, as should be amd 64
#but when running, this is installing on local mac
  vars: #These variables can be overriden from the command line
    privilege_escalate: true           #Default to NOT escalate to root privledges
    install_os: "linux"                 #Default to linux OS
    install_arch:  "aarch64"              #Default to amd64 architecture MVK amd64 --> arm64, try aarch64 if doesnt work for apple changed back to amd64 as for cluster
    install_arch_k8s: "aarch64" # added by MVK as same arch was being used for controller and cluster
    bin_install_dir:  "/Users/michaelkhalsa/hlf/bevel/bin" #"~/bin"           #Default to ~/bin install directory for binaries
